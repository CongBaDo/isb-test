@mixin row($gutter: $grid-gutter-width) {
   --gutter-x: #{$gutter};
   --gutter-y: 0;
   display: flex;
   flex-wrap: wrap;
   margin-top: 0;
   margin-right: calc(-0.5 * #{$gutter});
   margin-left: calc(-0.5 * #{$gutter});
}

@mixin col-ready() {
   box-sizing: border-box;
   flex-shrink: 0;
   width: 100%;
   max-width: 100%;
   padding-right: calc(var(--gutter-x) * 0.5);
   padding-left: calc(var(--gutter-x) * 0.5);
   margin-top: var(--gutter-y);
}

@mixin col($size: false, $columns: $grid-columns) {
   @if $size {
      flex: 0 0 auto;
      width: #{calc(100% * #{divide($size, $columns)})};
   } @else {
      flex: 1 1 0;
      max-width: 100%;
   }
}

@mixin row-cols($count) {
   > * {
      flex: 0 0 auto;
      width: divide(100%, $count);
   }
}

@mixin col-auto() {
   flex: 0 0 auto;
   width: auto;
}

@mixin col-offset($size, $columns: $grid-columns) {
   $num: divide($size, $columns);
   margin-left: if($num == 0, 0, #{calc(100 * $num / 12) + "%"});
}

@mixin grid-columns($columns: $grid-columns, $gutter: $grid-gutter-width, $breakpoints: $grid-breakpoints) {
   @each $breakpoint in map-keys($breakpoints) {
      $infix: breakpoint-infix($breakpoint, $breakpoints);

      @include media-breakpoint-up($breakpoint, $breakpoints) {
         // Provide basic `.col-{bp}` classes for equal-width flexbox columns
         .col#{$infix} {
            flex: 1 0 0%; // Flexbugs #4: https://github.com/philipwalton/flexbugs#flexbug-4
         }

         .row-cols#{$infix}-auto > * {
            @include col-auto();
         }

         @if $grid-row-columns > 0 {
            @for $i from 1 through $grid-row-columns {
               .row-cols#{$infix}-#{$i} {
                  @include row-cols($i);
               }
            }
         }

         .col#{$infix}-auto {
            @include col-auto();
         }

         @if $columns > 0 {
            @for $i from 1 through $columns {
               .col#{$infix}-#{$i} {
                  @include col($i, $columns);
               }
            }

            // `$columns - 1` because offsetting by the width of an entire row isn't possible
            @for $i from 0 through ($columns - 1) {
               @if not($infix == "" and $i == 0) {
                  // Avoid emitting useless .offset-0
                  .offset#{$infix}-#{$i} {
                     @include col-offset($i, $columns);
                  }
               }
            }
         }

         // Gutters
         //
         // Make use of `.g-*`, `.gx-*` or `.gy-*` utilities to change spacing between the columns.
         @each $key, $value in $gutters {
            .g#{$infix}-#{$key},
            .gx#{$infix}-#{$key} {
               --gutter-x: #{$value};
            }

            .g#{$infix}-#{$key},
            .gy#{$infix}-#{$key} {
               --gutter-y: #{$value};
            }
         }
      }
   }
}

.row {
   @include row();

   > * {
      @include col-ready();
   }
}

@include grid-columns();
